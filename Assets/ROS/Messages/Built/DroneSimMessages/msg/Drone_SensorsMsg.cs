//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.DroneSimMessages
{
    [Serializable]
    public class Drone_SensorsMsg : Message
    {
        public const string k_RosMessageName = "drone_sim_messages/Drone_Sensors";
        public override string RosMessageName => k_RosMessageName;

        //  Drone Sensor Data
        public HeaderMsg header;
        //  Camera data
        public byte[] camera_image;
        //  Compressed image buffer
        //  Infrared Sensor data
        public float height;
        //  Single proximity value for height
        //  Imu data
        //  Accelerations should be in m/s^2 (not in g's), and rotational velocity should be in rad/sec
        public Geometry.QuaternionMsg orientation;
        public Geometry.Vector3Msg angular_velocity;
        public Geometry.Vector3Msg linear_acceleration;

        public Drone_SensorsMsg()
        {
            this.header = new HeaderMsg();
            this.camera_image = new byte[0];
            this.height = 0.0f;
            this.orientation = new Geometry.QuaternionMsg();
            this.angular_velocity = new Geometry.Vector3Msg();
            this.linear_acceleration = new Geometry.Vector3Msg();
        }

        public Drone_SensorsMsg(HeaderMsg header, byte[] camera_image, float height, Geometry.QuaternionMsg orientation, Geometry.Vector3Msg angular_velocity, Geometry.Vector3Msg linear_acceleration)
        {
            this.header = header;
            this.camera_image = camera_image;
            this.height = height;
            this.orientation = orientation;
            this.angular_velocity = angular_velocity;
            this.linear_acceleration = linear_acceleration;
        }

        public static Drone_SensorsMsg Deserialize(MessageDeserializer deserializer) => new Drone_SensorsMsg(deserializer);

        private Drone_SensorsMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.camera_image, sizeof(byte), deserializer.ReadLength());
            deserializer.Read(out this.height);
            this.orientation = Geometry.QuaternionMsg.Deserialize(deserializer);
            this.angular_velocity = Geometry.Vector3Msg.Deserialize(deserializer);
            this.linear_acceleration = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.camera_image);
            serializer.Write(this.camera_image);
            serializer.Write(this.height);
            serializer.Write(this.orientation);
            serializer.Write(this.angular_velocity);
            serializer.Write(this.linear_acceleration);
        }

        public override string ToString()
        {
            return "Drone_SensorsMsg: " +
            "\nheader: " + header.ToString() +
            "\ncamera_image: " + System.String.Join(", ", camera_image.ToList()) +
            "\nheight: " + height.ToString() +
            "\norientation: " + orientation.ToString() +
            "\nangular_velocity: " + angular_velocity.ToString() +
            "\nlinear_acceleration: " + linear_acceleration.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
