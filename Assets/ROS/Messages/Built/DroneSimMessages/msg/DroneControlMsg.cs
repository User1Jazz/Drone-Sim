//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DroneSimMessages
{
    [Serializable]
    public class DroneControlMsg : Message
    {
        public const string k_RosMessageName = "drone_sim_messages/DroneControl";
        public override string RosMessageName => k_RosMessageName;

        //  ROS2 Message for Drone Control
        public Geometry.TwistMsg twist;
        //  Description below is the definition of the twist message
        //    Vector3 linear
        //     float64 x  # Forward/Backward
        //     float64 y  # Left/Right
        //     float64 z  # Up/Down
        //   Vector3 angular
        //     float64 x  # Roll
        //     float64 y  # Pitch
        //     float64 z  # Yaw (Yaw left/Yaw right)

        public DroneControlMsg()
        {
            this.twist = new Geometry.TwistMsg();
        }

        public DroneControlMsg(Geometry.TwistMsg twist)
        {
            this.twist = twist;
        }

        public static DroneControlMsg Deserialize(MessageDeserializer deserializer) => new DroneControlMsg(deserializer);

        private DroneControlMsg(MessageDeserializer deserializer)
        {
            this.twist = Geometry.TwistMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.twist);
        }

        public override string ToString()
        {
            return "DroneControlMsg: " +
            "\ntwist: " + twist.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
